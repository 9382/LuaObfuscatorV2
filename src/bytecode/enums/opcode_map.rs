use crate::bytecode::structs::{
    instruction::Instruction,
    opcode::Opcode,
    opcodes::{
        op_add::OpAdd, op_call::OpCall, op_close::OpClose, op_closure::OpClosure,
        op_concat::OpConcat, op_div::OpDiv, op_eq::OpEq, op_forloop::OpForLoop,
        op_forprep::OpForPrep, op_getglobal::OpGetGlobal, op_gettable::OpGetTable,
        op_getupval::OpGetUpval, op_jmp::OpJmp, op_le::OpLe, op_len::OpLen,
        op_loadbool::OpLoadBool, op_loadconst::OpLoadConst, op_loadnil::OpLoadNil, op_lt::OpLt,
        op_mod::OpMod, op_move::OpMove, op_mul::OpMul, op_newtable::OpNewTable, op_not::OpNot,
        op_pow::OpPow, op_return::OpReturn, op_self::OpSelf, op_setglobal::OpSetGlobal,
        op_setlist::OpSetList, op_settable::OpSetTable, op_setupval::OpSetUpval, op_sub::OpSub,
        op_tailcall::OpTailCall, op_test::OpTest, op_testset::OpTestSet, op_tforloop::OpTForLoop,
        op_unm::OpUnm, op_vararg::OpVarArg,
    },
};

pub const OPCODE_MAP: [fn(instruction: Instruction) -> Box<dyn Opcode>; 38] = [
    |inst| Box::new(OpMove::new(inst)),
    |inst| Box::new(OpLoadConst::new(inst)),
    |inst| Box::new(OpLoadBool::new(inst)),
    |inst| Box::new(OpLoadNil::new(inst)),
    |inst| Box::new(OpGetUpval::new(inst)),
    |inst| Box::new(OpGetGlobal::new(inst)),
    |inst| Box::new(OpGetTable::new(inst)),
    |inst| Box::new(OpSetGlobal::new(inst)),
    |inst| Box::new(OpSetUpval::new(inst)),
    |inst| Box::new(OpSetTable::new(inst)),
    |inst| Box::new(OpNewTable::new(inst)),
    |inst| Box::new(OpSelf::new(inst)),
    |inst| Box::new(OpAdd::new(inst)),
    |inst| Box::new(OpSub::new(inst)),
    |inst| Box::new(OpMul::new(inst)),
    |inst| Box::new(OpDiv::new(inst)),
    |inst| Box::new(OpMod::new(inst)),
    |inst| Box::new(OpPow::new(inst)),
    |inst| Box::new(OpUnm::new(inst)),
    |inst| Box::new(OpNot::new(inst)),
    |inst| Box::new(OpLen::new(inst)),
    |inst| Box::new(OpConcat::new(inst)),
    |inst| Box::new(OpJmp::new(inst)),
    |inst| Box::new(OpEq::new(inst)),
    |inst| Box::new(OpLt::new(inst)),
    |inst| Box::new(OpLe::new(inst)),
    |inst| Box::new(OpTest::new(inst)),
    |inst| Box::new(OpTestSet::new(inst)),
    |inst| Box::new(OpCall::new(inst)),
    |inst| Box::new(OpTailCall::new(inst)),
    |inst| Box::new(OpReturn::new(inst)),
    |inst| Box::new(OpForLoop::new(inst)),
    |inst| Box::new(OpForPrep::new(inst)),
    |inst| Box::new(OpTForLoop::new(inst)),
    |inst| Box::new(OpSetList::new(inst)),
    |inst| Box::new(OpClose::new(inst)),
    |inst| Box::new(OpClosure::new(inst)),
    |inst| Box::new(OpVarArg::new(inst)),
];
