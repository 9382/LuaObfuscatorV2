Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: .\luac.out
                         ** global header start **
0000  1B4C7561           header signature: "\27Lua"
0004  51                 version (major:minor hex digits)
0005  00                 format (0=official)
0006  01                 endianness (1=little endian)
0007  04                 size of int (bytes)
0008  04                 size of size_t (bytes)
0009  04                 size of Instruction (bytes)
000A  08                 size of number (bytes)
000B  00                 integral (1=integral)
                         * number type: double
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
                         
000C                     ** function [0] definition (level 1)
                         ** start of function **
000C  0B000000           string size (11)
0010  4074656D70312E6C+  "@temp1.l"
0018  756100             "ua\0"
                         source name: @temp1.lua
001B  00000000           line defined (0)
001F  00000000           last line defined (0)
0023  00                 nups (0)
0024  00                 numparams (0)
0025  02                 is_vararg (2)
0026  04                 maxstacksize (4)
                         * code:
0027  0E000000           sizecode (14)
002B  0A000001           [01] newtable   0   2   0    ; array=2, hash=0
002F  41000000           [02] loadk      1   0        ; "Hello"
0033  81400000           [03] loadk      2   1        ; "world"
0037  22400001           [04] setlist    0   2   1    ; index 1 to 2
003B  41800000           [05] loadk      1   2        ; 1
003F  94000000           [06] len        2   0      
0043  19808000           [07] le         0   1   2    ; to [9] if true
0047  16000180           [08] jmp        5            ; to [14]
004B  85C00000           [09] getglobal  2   3        ; print
004F  C6400000           [10] gettable   3   0   1  
0053  9C400001           [11] call       2   2   1  
0057  4C80C000           [12] add        1   1   258  ; 1
005B  16C0FD7F           [13] jmp        -8           ; to [6]
005F  1E008000           [14] return     0   1      
                         * constants:
0063  04000000           sizek (4)
0067  04                 const type 4
0068  06000000           string size (6)
006C  48656C6C6F00       "Hello\0"
                         const [0]: "Hello"
0072  04                 const type 4
0073  06000000           string size (6)
0077  776F726C6400       "world\0"
                         const [1]: "world"
007D  03                 const type 3
007E  000000000000F03F   const [2]: (1)
0086  04                 const type 4
0087  06000000           string size (6)
008B  7072696E7400       "print\0"
                         const [3]: "print"
                         * functions:
0091  00000000           sizep (0)
                         * lines:
0095  0E000000           sizelineinfo (14)
                         [pc] (line)
0099  01000000           [01] (1)
009D  01000000           [02] (1)
00A1  01000000           [03] (1)
00A5  01000000           [04] (1)
00A9  03000000           [05] (3)
00AD  04000000           [06] (4)
00B1  04000000           [07] (4)
00B5  04000000           [08] (4)
00B9  05000000           [09] (5)
00BD  05000000           [10] (5)
00C1  05000000           [11] (5)
00C5  06000000           [12] (6)
00C9  06000000           [13] (6)
00CD  07000000           [14] (7)
                         * locals:
00D1  02000000           sizelocvars (2)
00D5  02000000           string size (2)
00D9  6100               "a\0"
                         local [0]: a
00DB  04000000             startpc (4)
00DF  0D000000             endpc   (13)
00E3  02000000           string size (2)
00E7  6900               "i\0"
                         local [1]: i
00E9  05000000             startpc (5)
00ED  0D000000             endpc   (13)
                         * upvalues:
00F1  00000000           sizeupvalues (0)
                         ** end of function **

00F5                     ** end of chunk **
